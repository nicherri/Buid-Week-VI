@model IEnumerable<BW_VI___Team_1.Models.Order>

@{
    ViewData["Title"] = "Index";
}

<div id="loadingSpinner" class="absCenter">
    <div class="loaderPill">
        <div class="loaderPill-anim">
            <div class="loaderPill-anim-bounce">
                <div class="loaderPill-anim-flop">
                    <div class="loaderPill-pill"></div>
                </div>
            </div>
        </div>
        <div class="loaderPill-floor">
            <div class="loaderPill-floor-shadow"></div>
        </div>
        <div class="loaderPill-text">Caricamento LifePet</div>
    </div>
</div>

<div class="table">
    <section class="table_header"><h1 class="text-center">Registro Ordini</h1></section>
    <section class="table_body d-flex align-item-center justify-content-center">
        <table>
            <thead>
                <tr class="text-center">
                    <th>Prescrizione Medica</th>
                    <th>Data Ordine</th>
                    <th>Proprietario</th>
                    <th>Prodotti</th>
                    <th>
                        <div class="d-flex align-items-center justify-content-center">
                            <input id="searchInput" class="form-control me-2 w-50" type="search" placeholder="Search" aria-label="Search">
                            <i class="fa-solid fa-magnifying-glass fs-5"></i>
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="text-center">
                        <td>@Html.DisplayFor(modelItem => item.MedicalPrescription)</td>
                        <td>@Html.DisplayFor(modelItem => item.Date)</td>
                        <td>
                            @if (item.Owner != null)
                            {
                                @Html.DisplayFor(modelItem => item.Owner.FirstName) <br /> @Html.DisplayFor(modelItem => item.Owner.LastName)
                            }
                            else
                            {
                                <span>N/A</span>
                            }
                        </td>
                        <td>
                            @if (item.Products != null && item.Products.Any())
                            {
                                <ul>
                                    @foreach (var product in item.Products)
                                    {
                                        <li>@Html.DisplayFor(modelItem => product.Name)</li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <span>No products</span>
                            }
                        </td>
                        <td>
                            <div class="btn-group gap-1" role="group">
                                <a asp-action="UpdateOrder" asp-route-id="@item.Id" class="btn btn-warning btn-sm"><i class="fas fa-edit"></i></a>
                                <a asp-action="DeleteOrder" asp-route-id="@item.Id" class="btn btn-danger btn-sm" onclick="confirmDelete(event, this);"><i class="fas fa-trash"></i></a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </section>
</div>

@section Scripts {

    <script type="text/javascript">
        window.onload = function () {
            document.getElementById('loadingSpinner').style.display = 'none';
            document.getElementById('tableContent').style.display = 'block';
        };
        document.getElementById('searchInput').addEventListener('input', function () {
            var input = document.getElementById('searchInput');
            var filter = input.value.toLowerCase();
            var table = document.getElementsByTagName('table')[0];
            var rows = table.getElementsByTagName('tr');

            Array.from(rows).forEach(function (row) {
                var td = row.getElementsByTagName('td')[0];
                if (td) {
                    var txtValue = td.textContent || td.innerText;
                    if (txtValue.toLowerCase().includes(filter)) {
                        row.style.display = "";
                    } else {
                        row.style.display = "none";
                    }
                }
            });
        });

        function confirmDelete(event, element) {
            event.preventDefault();
            Swal.fire({
                title: 'Sei sicuro?',
                text: "Non potrai annullare questa operazione!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sì, elimina!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: element.href,
                        type: 'POST',
                        success: function (result) {
                            $(element).closest('tr').remove();
                            Swal.fire('Eliminato!', 'Il prodotto è stato eliminato.', 'success');
                        },
                        error: function (xhr, status, error) {
                            Swal.fire('Errore', 'Non è stato possibile eliminare il prodotto.', 'error');
                        }
                    });
                }
            });
        }
    </script>
}
